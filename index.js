const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

// Initialize the WhatsApp client
const client = new Client({
    authStrategy: new LocalAuth()
});

// Generate and display the QR Code for authentication
client.on('qr', (qr) => {
    qrcode.generate(qr, { small: true });
    console.log('Scan this QR code with WhatsApp to log in.');
});

// Notify when the bot is ready
client.on('ready', () => {
    console.log('WhatsApp bot is ready!');
});

// Handle incoming messages
client.on('message', async (message) => {
    try {
        // Log received messages for debugging
        console.log(`Received: ${message.body}`);

        // "Hi" or "‡∑Ñ‡∑è‡∂∫‡∑í"
        if (message.body.toLowerCase() === 'hi' || message.body.toLowerCase() === '‡∑Ñ‡∑è‡∂∫‡∑í') {
            await message.reply('‡∂Ü ‡∂¥‡∑ê‡∂ß‡∑í‡∂∫‡∑ù! ‡∂ö‡∑ú‡∑Ñ‡∑ú‡∂∏‡∂Ø? ‡∂∏‡∂∏ ‡∂≠‡∂∏‡∂∫‡∑í Whatsapp Bot.');
        }
        // "How are you?" or "‡∂ö‡∑ú‡∑Ñ‡∑ú‡∂∏‡∂Ø"
        else if (message.body.toLowerCase() === 'how are you' || message.body.toLowerCase() === '‡∂ö‡∑ú‡∑Ñ‡∑ú‡∂∏‡∂Ø') {
            await message.reply('‡∂∏‡∂∏ ‡∑Ñ‡∑ú‡∂≥‡∑í‡∂±‡∑ä! ‡∂î‡∂∫‡∑è‡∂ß ‡∂ö‡∑ú‡∑Ñ‡∑ú‡∂∏‡∂Ø? üòä');
        }
        // "Bye" or "‡∂∂‡∑è‡∂∫‡∑í"
        else if (message.body.toLowerCase() === 'bye' || message.body.toLowerCase() === '‡∂∂‡∑è‡∂∫‡∑í') {
            await message.reply('‡∂∂‡∑è‡∂∫‡∑í! ‡∂¥‡∑É‡∑ä‡∑É‡∑ô ‡∑Ñ‡∂∏‡∑ä‡∂∂‡∑Ä‡∑ô‡∂∏‡∑î! üëã');
        }
        
        else if (message.body.toLowerCase() === 'http' || message.body.toLowerCase() === '') {
            await message.reply('palayan HTTP yanna');
        }

        
        else {
            //await message.reply('‡∂∏‡∂ß ‡∂≠‡∑ö‡∂ª‡∑ô‡∂±‡∑ä‡∂±‡∑ô ‡∂±‡∑ê‡∑Ñ‡∑ê. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂≠‡∑Ä‡∂≠‡∑ä ‡∂¥‡∑ê‡∑Ñ‡∑ê‡∂Ø‡∑í‡∂Ω‡∑í‡∑Ä ‡∂Ö‡∑É‡∂±‡∑ä‡∂±.');
        }
    } catch (error) {
        console.error(`Error handling message: ${error.message}`);
    }
});

// Initialize the WhatsApp client
client.initialize();
